{"version":3,"sources":["config/keys.js","loader.gif","config/prod.js","components/AllAccounts.jsx","components/AccountInfo.jsx","components/ConfirmDeleteAccount.jsx","components/AddNewAccount.jsx","components/CurrentVideo.jsx","components/DailyTube.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","require","__webpack_require__","p","YOUTUBE_KEY","process","AllAccounts","props","accounts","onEditAccountInfo","react_default","a","createElement","className","style","height","map","account","index","key","concat","current","onClick","id","src","account_avatar","alt","width","channel_name","slice","queue_status","video_duration_remaining","upload_videos_remaining","AccountInfo","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","searchTerms","isCurrent","isQueued","searchOrder","accountId","handleSearchTermInput","e","persist","keyCode","setState","toConsumableArray","target","value","document","getElementById","handleClearSearchTerm","searchTermToRemove","filter","searchTerm","handleCurrentStateChange","handleQueueStateChange","handleSearchOrderSelect","inherits","createClass","_this2","_this$props","onRequestToDeleteAccount","onUpdateAccountSettings","onAddNewAccount","Loader","Fragment","info","avatar_60_url","screenname","followers_total","following_total","videos_total","views_total","Math","round","revenues_video_total","revenues_video_last_month","revenues_video_last_day","upload","minutes_remaining","videos_remaining","type","defaultChecked","onChange","htmlFor","defaultValue","placeholder","onKeyUp","nextProps","prevState","oldSearchTerms","search_terms","split","search_order","Component","ConfirmDeleteAccount","disabledDelete","onDeleteAccount","onCancelRequestToDeleteAccount","console","log","result","characters","i","charAt","floor","random","disabled","AddNewAccount","error","apiKey","apiSecret","channelUsername","channelPassword","handleApiKeyInput","handleApiSecretInput","handleChannelUsernameInput","handleChannelPasswordInput","verifyDataAndCreateChannel","_this$state","onAddNewDailyMotionChannel","CurrentVideo","videoInfo","values","snippet","thumbnails","sort","b","url","title","channelTitle","statistics","viewCount","likeCount","dislikeCount","getUploadDate","publishedAt","description","tags","tag","Axios","moment","DailyTube","headers","Accept","Content-Type","running","searching","downloading","uploading","publishing","switchingAccounts","deletingAccount","creatingChannel","currentAccount","newAccountObject","accountInfo","filePath","publishUrl","handleDeleteAccount","delete","then","response","updatedAccounts","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","fetchAllAccounts","t1","sent","t2","stop","data","success","catch","addingNewDailyMotionChannel","body","JSON","stringify","post","handleEditAccountInfo","handleAddNewDailyMotionChannel","iso","fromNow","_ref2","_callee2","updateAccountId","_context2","_x","handleRequestToDeleteAccount","handleCancelRequestToDeleteAccount","handleUpdateAccountSettings","_ref3","_callee4","newAccountSettings","_context4","put","_ref4","_callee3","_context3","_x2","fetchAccountInfo","get","_callee5","_context5","abrupt","fetchVideoInfo","_ref6","_callee6","_context6","items","_x3","fetchAllVideos","_callee7","videos","_context7","fetchUnUploadedAccountVideos","_ref8","_callee8","_context8","_x4","switchAccounts","nextAccountId","currentAccountIndex","indexOf","_ref9","_callee9","newCurrentAccount","_context9","_x5","getSearchResults","_ref10","_callee11","terms","order","allVideos","allVideoIds","date","promises","searchResults","cleanedResults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","results","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_context11","video","video_id","Date","setDate","getDate","toISOString","term","infoPromises","_ref11","_callee10","videoId","infoUrl","_context10","includes","contentDetails","licensedContent","_x8","Promise","all","undefined","Symbol","iterator","done","return","finish","_x6","_x7","searchForVideos","_callee13","_this$state$currentAc","searchIds","_context13","Set","splice","_ref13","_callee12","_context12","_x9","downloadVideo","_callee15","accountVideos","currentVideoId","_videoInfo","_context15","_ref15","_callee14","_context14","message","file_path","_x10","uploadVideo","_callee17","_context17","_ref17","_callee16","_context16","publish_url","_x11","publishVideo","_callee19","_context19","thumbnailUrl","_ref19","_callee18","_context18","_x12","_componentDidMount","_callee20","_context20","_this$state2","_this$state3","components_ConfirmDeleteAccount","components_AllAccounts","components_AccountInfo","components_AddNewAccount","handle","user_name","components_CurrentVideo","App","components_DailyTube","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9836eaab.chunk.js","sourcesContent":["/* \n    figure aout which credentials to return to the user\n*/\nif (process.env.NODE_ENV === \"production\") {\n    /* \n        we are in production, return production keys\n        */\n    module.exports = require(\"./prod\");\n} else {\n    /* \n        we are in development return development keys\n    */\n    module.exports = require(\"./dev\");\n}\n","module.exports = __webpack_public_path__ + \"static/media/loader.443293d5.gif\";","/* \n    this file exports production keys\n*/\nmodule.exports = {\n    YOUTUBE_KEY: process.env.YOUTUBE_KEY,\n};\n","import React from \"react\";\n\nfunction AllAccounts(props) {\n    const { accounts, onEditAccountInfo } = props;\n    return (\n        <div className=\"overflow-auto\" style={{ height: \"60vh\" }}>\n            <h5>Queue</h5>\n\n            {accounts.map((account, index) => {\n                return (\n                    <div\n                        key={index}\n                        className={`card shadow-sm pointer overflow-hidden mb-2 ${\n                            account.current ? \"bg-secondary text-light\" : \"\"\n                        }`}\n                        onClick={() => {\n                            onEditAccountInfo(account.id);\n                        }}\n                    >\n                        <div className=\"d-flex align-items-center\">\n                            <img\n                                className=\"rounded mr-2\"\n                                src={account.account_avatar}\n                                alt=\"\"\n                                width=\"60px\"\n                                height=\"60px\"\n                            />\n                            <div className=\"w-75 d-flex\">\n                                <div className=\"w-50\">\n                                    <div className=\"d-flex align-items-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            {account.channel_name.slice(0, 12)}\n                                        </span>\n                                    </div>\n                                    {account.queue_status ? (\n                                        <div className=\"d-flex align-items-center\">\n                                            <small className=\"mr-2\">\n                                                Queued\n                                            </small>\n                                            <span className=\"font-weight-bolder text-success\">\n                                                YES\n                                            </span>\n                                        </div>\n                                    ) : (\n                                        <div className=\"d-flex align-items-center\">\n                                            <small className=\"mr-2\">\n                                                Queued\n                                            </small>\n                                            <span className=\"font-weight-bolder text-danger\">\n                                                NO\n                                            </span>\n                                        </div>\n                                    )}\n                                </div>\n                                <div className=\"w-50\">\n                                    <div className=\"d-flex align-items-center\">\n                                        <small className=\"mr-2\">\n                                            Mins Left\n                                        </small>\n                                        <span className=\"font-weight-bolder\">\n                                            {account.video_duration_remaining}\n                                        </span>\n                                    </div>\n\n                                    <div className=\"d-flex align-items-center\">\n                                        <small className=\"mr-2\">\n                                            Vids Left\n                                        </small>\n                                        <span className=\"font-weight-bolder\">\n                                            {account.upload_videos_remaining}\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default AllAccounts;\n","import React, { Component } from \"react\";\nimport Loader from \"../loader.gif\";\n\nexport class AccountInfo extends Component {\n    state = {\n        searchTerms: [],\n        isCurrent: false,\n        isQueued: false,\n        searchOrder: null,\n        accountId: null,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n        if (\n            nextProps.account !== false &&\n            nextProps.account !== \"loading\" &&\n            prevState.accountId !== nextProps.account.upload.id\n        ) {\n            const oldSearchTerms = nextProps.account.upload.search_terms.split(\n                \",\",\n            );\n\n            return {\n                isCurrent: nextProps.account.upload.current,\n                isQueued: nextProps.account.upload.queue_status,\n                searchTerms: oldSearchTerms,\n                searchOrder: nextProps.account.upload.search_order,\n                accountId: nextProps.account.upload.id,\n            };\n        }\n        return null;\n    }\n\n    handleSearchTermInput = e => {\n        e.persist();\n        if (e.keyCode === 13) {\n            this.setState({\n                searchTerms: [...this.state.searchTerms, e.target.value],\n            });\n            document.getElementById(\"searchTermsInput\").value = \"\";\n        }\n    };\n\n    handleClearSearchTerm = searchTermToRemove => {\n        this.setState({\n            searchTerms: this.state.searchTerms.filter(\n                searchTerm => searchTerm !== searchTermToRemove,\n            ),\n        });\n    };\n\n    handleCurrentStateChange = () => {\n        this.setState({ isCurrent: !this.state.isCurrent });\n    };\n\n    handleQueueStateChange = () => {\n        this.setState({ isQueued: !this.state.isQueued });\n    };\n\n    handleSearchOrderSelect = e => {\n        this.setState({ searchOrder: e.target.value });\n    };\n\n    render() {\n        const {\n            account,\n            onRequestToDeleteAccount,\n            onUpdateAccountSettings,\n            onAddNewAccount,\n        } = this.props;\n        if (account === false) {\n            return null;\n        } else if (account === \"loading\") {\n            return (\n                <div className=\"col-sm-9 d-flex h-100 w-100\">\n                    <div className=\"mx-auto my-auto d-flex align-items-center\">\n                        <h4 className=\"mr-3\">Loading Account Details</h4>\n                        <img height=\"50px\" src={Loader} alt=\"\" />\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <React.Fragment>\n                    <div>\n                        <button\n                            className=\"btn btn-secondary py-0 mb-2 mr-5 d-inline-flex align-items-center\"\n                            onClick={() => onAddNewAccount()}\n                        >\n                            add new account\n                            <i className=\"material-icons md-18\">add</i>\n                        </button>\n                        <button\n                            className=\"btn btn-danger text-dark py-0 mb-2 d-inline-flex align-items-center\"\n                            onClick={() => onRequestToDeleteAccount()}\n                        >\n                            delete this account\n                            <i className=\"material-icons md-18\">clear</i>\n                        </button>\n                    </div>\n                    <div\n                        className=\"mx-0 row my-2 overflow-auto\"\n                        style={{ height: \"60vh\" }}\n                    >\n                        <div className=\"col-sm-6 px-1 mx-0\">\n                            <div className=\"card shadow-sm py-2\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <div className=\"text-center flex-fill\">\n                                        <img\n                                            className=\"img-fluid rounded w-50\"\n                                            src={account.info.avatar_60_url}\n                                            alt=\"\"\n                                        />\n                                        <h6 className=\"px-1 pt-1 font-weight-bolder m-0\">\n                                            {account.info.screenname}\n                                        </h6>\n                                    </div>\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            {account.info.followers_total}\n                                        </span>\n                                        <small className=\"mb-2\">\n                                            followers\n                                        </small>\n                                    </div>\n\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            {account.info.following_total}\n                                        </span>\n                                        <small className=\"mb-2\">\n                                            following\n                                        </small>\n                                    </div>\n\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            {account.info.videos_total}\n                                        </span>\n                                        <small className=\"mb-2\">Videos</small>\n                                    </div>\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            {account.info.views_total}\n                                        </span>\n                                        <small className=\"mb-2\">Views</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <br />\n\n                            <div className=\"card shadow-sm p-2\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <div className=\"border-right border-info w-25 d-flex align-items-center justify-content-center\">\n                                        <h6 className=\"font-weight-bolder m-0\">\n                                            Revenue\n                                        </h6>\n                                    </div>\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            <span className=\"pr-1\">€</span>\n                                            {Math.round(\n                                                account.info\n                                                    .revenues_video_total * 100,\n                                            ) / 100}\n                                        </span>\n                                        <small className=\"\">Total</small>\n                                    </div>\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            <span className=\"pr-1\">€</span>\n                                            {Math.round(\n                                                account.info\n                                                    .revenues_video_last_month *\n                                                    100,\n                                            ) / 100}\n                                        </span>\n                                        <small className=\"\">Last Month</small>\n                                    </div>\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            <span className=\"pr-1\">€</span>\n                                            {Math.round(\n                                                account.info\n                                                    .revenues_video_last_day *\n                                                    100,\n                                            ) / 100}\n                                        </span>\n                                        <small className=\"\">Yesterday</small>\n                                    </div>\n                                </div>\n                            </div>\n                            <br />\n\n                            <div className=\"card shadow-sm p-2\">\n                                <div className=\"d-flex justify-content-between\">\n                                    <div className=\"border-right border-info w-25 d-flex align-items-center\">\n                                        <h6 className=\"font-weight-bolder d-flex flex-fill flex-column text-center\">\n                                            <span className=\"px-1 mx-auto\">\n                                                Upload\n                                            </span>\n                                            <span className=\"px-1 mx-auto\">\n                                                Limits\n                                            </span>\n                                        </h6>\n                                    </div>\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            {account.upload.minutes_remaining}\n                                        </span>\n                                        <small className=\"\">\n                                            Upload minutes Remaining\n                                        </small>\n                                    </div>\n                                    <div className=\"d-flex flex-column flex-fill text-center justify-content-center\">\n                                        <span className=\"font-weight-bolder\">\n                                            {account.upload.videos_remaining}\n                                        </span>\n                                        <small className=\"\">\n                                            {\" \"}\n                                            Upload videos remaining\n                                        </small>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <br />\n                        </div>\n                        <div className=\"col-sm-6\">\n                            <div className=\"card shadow-sm p-2\">\n                                <div className=\"d-flex pt-3 pb-2\">\n                                    <h6 className=\"font-weight-bolder \">\n                                        Edit Channel Settings\n                                    </h6>\n                                </div>\n                                <div className=\"d-flex align-items-center mb-1\">\n                                    <span className=\"w-50\">Current</span>\n                                    <div className=\"custom-control custom-switch font-weight-lighter text-success\">\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"custom-control-input\"\n                                            id=\"set-channel-to-current\"\n                                            defaultChecked={\n                                                account.upload.current\n                                            }\n                                            onChange={\n                                                this.handleCurrentStateChange\n                                            }\n                                        />\n                                        <label\n                                            className=\"custom-control-label\"\n                                            htmlFor=\"set-channel-to-current\"\n                                        >\n                                            {this.state.isCurrent ? (\n                                                <span className=\"text-success\">\n                                                    Yes\n                                                </span>\n                                            ) : (\n                                                <span className=\"text-danger\">\n                                                    No\n                                                </span>\n                                            )}\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex align-items-center mb-1\">\n                                    <span className=\"w-50\">In queue</span>\n                                    <div className=\"custom-control custom-switch font-weight-lighter text-success\">\n                                        <input\n                                            type=\"checkbox\"\n                                            className=\"custom-control-input\"\n                                            id=\"add-channel-to-queue\"\n                                            defaultChecked={\n                                                account.upload.queue_status\n                                            }\n                                            onChange={\n                                                this.handleQueueStateChange\n                                            }\n                                        />\n                                        <label\n                                            className=\"custom-control-label\"\n                                            htmlFor=\"add-channel-to-queue\"\n                                        >\n                                            {this.state.isQueued ? (\n                                                <span className=\"text-success\">\n                                                    Yes\n                                                </span>\n                                            ) : (\n                                                <span className=\"text-danger\">\n                                                    No\n                                                </span>\n                                            )}\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"d-flex align-items-center mb-2\">\n                                    <span className=\"w-50 m-0\">Search By</span>\n                                    <select\n                                        className=\"custom-select w-50 font-weight-lighter py-0\"\n                                        id=\"inputGroupSelect01\"\n                                        onChange={this.handleSearchOrderSelect}\n                                    >\n                                        <option defaultValue>\n                                            {this.state.searchOrder}\n                                        </option>\n                                        <option value=\"date\">Date</option>\n                                        <option value=\"rating\">Rating</option>\n                                        <option value=\"relevance\">\n                                            Relevance\n                                        </option>\n                                        <option value=\"title\">Title</option>\n                                        <option value=\"viewCount\">\n                                            View count\n                                        </option>\n                                    </select>\n                                </div>\n                                <div className=\"d-flex align-items-center\">\n                                    <span className=\"w-50 m-0\">\n                                        Search Terms\n                                    </span>\n                                    <input\n                                        type=\"text\"\n                                        id=\"searchTermsInput\"\n                                        className=\"form-control w-50\"\n                                        placeholder=\"#\"\n                                        onKeyUp={this.handleSearchTermInput}\n                                    />\n                                </div>\n                                <div className=\"d-flex flex-wrap flex-reverse my-2\">\n                                    {this.state.searchTerms.map(\n                                        (searchTerm, index) => {\n                                            return (\n                                                <button\n                                                    key={index}\n                                                    className=\"btn btn-outline-secondary py-0 mb-2 rounded px-2 mr-1 d-flex align-items-center\"\n                                                    onClick={() =>\n                                                        this.handleClearSearchTerm(\n                                                            searchTerm,\n                                                        )\n                                                    }\n                                                >\n                                                    <span className=\"mr-2\">\n                                                        {searchTerm}\n                                                    </span>\n                                                    <i className=\"material-icons md-18\">\n                                                        clear\n                                                    </i>\n                                                </button>\n                                            );\n                                        },\n                                    )}\n                                </div>\n                                <div className=\"d-flex px-4\">\n                                    <button\n                                        className=\"ml-auto btn btn-success py-1 px-2\"\n                                        onClick={() =>\n                                            onUpdateAccountSettings(this.state)\n                                        }\n                                    >\n                                        save changes\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default AccountInfo;\n","import React, { Component } from \"react\";\n\nexport class ConfirmDeleteAccount extends Component {\n    state = {\n        disabledDelete: true,\n    };\n\n    render() {\n        const {\n            account,\n            onDeleteAccount,\n            onCancelRequestToDeleteAccount,\n        } = this.props;\n        console.log(\"TCL: ConfirmDeleteAccount -> account\", account);\n        if (!!!account) return null;\n        let result = \"\";\n        const characters =\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < 6; i++) {\n            result += characters.charAt(\n                Math.floor(Math.random() * characters.length),\n            );\n        }\n\n        const handleVerifyDeleteCode = () => {\n            if (document.getElementById(\"deleteCode\").value === result) {\n                this.setState({ disabledDelete: false });\n            }\n        };\n\n        return (\n            <div className=\"d-flex justify-content-center align-items-center absolute-cover\">\n                <div\n                    className=\"after-grey\"\n                    onClick={() => onCancelRequestToDeleteAccount()}\n                />\n                <div className=\"text-center card z-index-3\">\n                    <div className=\"card-header\">\n                        <h5 className=\"mb-0 px-4 py-3\">\n                            Are you sure you want to delete account\n                            <span className=\"mx-2 text-info\">\n                                {account.info.screenname}\n                            </span>\n                            permanently!\n                        </h5>\n                    </div>\n                    <div className=\"py-5\">\n                        <h5>\n                            Type\n                            <span className=\"mx-2 text-warning\">{result}</span>\n                            below to proceed\n                        </h5>\n                        <input\n                            type=\"text\"\n                            id=\"deleteCode\"\n                            onChange={() => handleVerifyDeleteCode()}\n                        />\n                    </div>\n                    <div className=\"d-flex justify-content-center card-footer\">\n                        <button\n                            className=\"btn mx-2 btn-secondary py-0\"\n                            onClick={() => onCancelRequestToDeleteAccount()}\n                        >\n                            cancel\n                        </button>\n                        <button\n                            className=\"btn mx-2 btn-danger py-0\"\n                            id=\"deleteButton\"\n                            disabled={this.state.disabledDelete}\n                            onClick={() => onDeleteAccount()}\n                        >\n                            delete\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ConfirmDeleteAccount;\n","import React, { Component } from \"react\";\n\nexport class AddNewAccount extends Component {\n    state = {\n        error: \"\",\n        searchTerms: [],\n        apiKey: \"\",\n        apiSecret: \"\",\n        channelUsername: \"\",\n        channelPassword: \"\",\n        searchOrder: \"\",\n    };\n\n    handleSearchTermInput = e => {\n        e.persist();\n        if (e.keyCode === 13) {\n            this.setState({\n                searchTerms: [...this.state.searchTerms, e.target.value],\n            });\n            document.getElementById(\"searchTermsInput\").value = \"\";\n        }\n    };\n\n    handleClearSearchTerm = searchTermToRemove => {\n        this.setState({\n            searchTerms: this.state.searchTerms.filter(\n                searchTerm => searchTerm !== searchTermToRemove,\n            ),\n        });\n    };\n\n    handleApiKeyInput = e => {\n        this.setState({ apiKey: e.target.value });\n    };\n\n    handleApiSecretInput = e => {\n        this.setState({ apiSecret: e.target.value });\n    };\n\n    handleChannelUsernameInput = e => {\n        this.setState({ channelUsername: e.target.value });\n    };\n\n    handleChannelPasswordInput = e => {\n        this.setState({ channelPassword: e.target.value });\n    };\n\n    handleSearchOrderSelect = e => {\n        this.setState({ searchOrder: e.target.value });\n    };\n\n    verifyDataAndCreateChannel = () => {\n        const {\n            apiKey,\n            apiSecret,\n            channelPassword,\n            channelUsername,\n            searchTerms,\n            searchOrder,\n        } = this.state;\n\n        if (\n            !!apiKey &&\n            !!apiSecret &&\n            !!channelPassword &&\n            !!channelUsername &&\n            !!searchOrder &&\n            searchTerms.length > 0\n        ) {\n            this.setState({ error: \"\" });\n            this.props.onAddNewDailyMotionChannel(this.state);\n        } else {\n            this.setState({ error: \"please fill out all fields\" });\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h5 className=\"px-2 mt-4 mb-3\">Add new DailyMotion channel</h5>\n                <div style={{ height: \"60vh\" }} className=\"overflow-auto\">\n                    {!!this.state.error ? (\n                        <div className=\"alert alert-warning d-flex align-items-center\">\n                            <span>{this.state.error}</span>\n                            <i\n                                className=\"material-icons ml-auto px-3 pointer\"\n                                onClick={() => this.setState({ error: \"\" })}\n                            >\n                                highlight_off\n                            </i>\n                        </div>\n                    ) : (\n                        \"\"\n                    )}\n                    <div className=\"d-flex\">\n                        <div className=\"card shadow-sm w-50 p-3 mr-4\">\n                            <div className=\"mb-2\">\n                                <label\n                                    className=\" form-control-sm\"\n                                    htmlFor=\"apiKey\"\n                                >\n                                    Api Key\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\" form-control\"\n                                    id=\"apiKey\"\n                                    onChange={this.handleApiKeyInput}\n                                />\n                            </div>\n                            <div className=\"mb-2\">\n                                <label\n                                    className=\" form-control-sm\"\n                                    htmlFor=\"apiSecret\"\n                                >\n                                    Api Secret\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\" form-control\"\n                                    id=\"apiSecret\"\n                                    onChange={this.handleApiSecretInput}\n                                />\n                            </div>\n                            <div className=\"mb-2\">\n                                <label\n                                    className=\" form-control-sm\"\n                                    htmlFor=\"userName\"\n                                >\n                                    Channel Username\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\" form-control\"\n                                    id=\"userName\"\n                                    onChange={this.handleChannelUsernameInput}\n                                />\n                            </div>\n                            <div className=\"mb-2\">\n                                <label\n                                    className=\" form-control-sm\"\n                                    htmlFor=\"password\"\n                                >\n                                    Channel Password\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    className=\" form-control\"\n                                    id=\"password\"\n                                    onChange={this.handleChannelPasswordInput}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"card shadow-sm w-50 p-3\">\n                            <h5 className=\"px-2 mb-3\">Videos Settings</h5>\n                            <div className=\"mb-2\">\n                                <label className=\" form-control-sm\">\n                                    Search order\n                                </label>\n                                <select\n                                    className=\"custom-select \"\n                                    id=\"inputGroupSelect01\"\n                                    onChange={this.handleSearchOrderSelect}\n                                >\n                                    <option defaultValue>Choose...</option>\n                                    <option value=\"date\">Date</option>\n                                    <option value=\"rating\">Rating</option>\n                                    <option value=\"relevance\">Relevance</option>\n                                    <option value=\"title\">Title</option>\n                                    <option value=\"viewCount\">\n                                        View count\n                                    </option>\n                                </select>\n                            </div>\n                            <div className=\"form-group row mx-0\">\n                                <label\n                                    htmlFor=\"searchTermsInput\"\n                                    className=\" form-control-sm\"\n                                >\n                                    Search Terms\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    id=\"searchTermsInput\"\n                                    className=\"form-control \"\n                                    placeholder=\"# Add search terms ...\"\n                                    onKeyUp={this.handleSearchTermInput}\n                                />\n                            </div>\n                            <div className=\"d-flex flex-wrap flex-reverse my-2\">\n                                {this.state.searchTerms.map(\n                                    (searchTerm, index) => {\n                                        return (\n                                            <button\n                                                key={index}\n                                                className=\"btn btn-outline-secondary py-0 mb-2 rounded px-2 mr-1 d-flex align-items-center\"\n                                                onClick={() =>\n                                                    this.handleClearSearchTerm(\n                                                        searchTerm,\n                                                    )\n                                                }\n                                            >\n                                                <span className=\"mr-2\">\n                                                    {searchTerm}\n                                                </span>\n                                                <i className=\"material-icons md-18\">\n                                                    clear\n                                                </i>\n                                            </button>\n                                        );\n                                    },\n                                )}\n                            </div>\n                            <div className=\"d-flex \">\n                                <button\n                                    className=\"ml-auto btn btn-success py-1 px-2\"\n                                    onClick={this.verifyDataAndCreateChannel}\n                                >\n                                    Add Channel\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddNewAccount;\n","import React from \"react\";\n\nfunction CurrentVideo(props) {\n    const videoInfo = props.videoInfo;\n    return (\n        <React.Fragment>\n            {!!videoInfo ? (\n                <div className=\"pt-2 d-flex\">\n                    <div className=\"\">\n                        <img\n                            height=\"140px\"\n                            src={\n                                Object.values(\n                                    videoInfo.snippet.thumbnails,\n                                ).sort((a, b) => b.width - a.width)[0].url\n                            }\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"h-100 px-2\">\n                        <h5 className=\"\">{videoInfo.snippet.title}</h5>\n                        <div>\n                            <span>{videoInfo.snippet.channelTitle}</span>\n                            <span className=\"px-2\">·</span>\n                            <span className=\"mr-1\">\n                                {videoInfo.statistics.viewCount}\n                            </span>\n                            <span>views</span>\n                            <span className=\"px-2\">·</span>\n                            <span className=\"mr-1\">\n                                {videoInfo.statistics.likeCount}\n                            </span>\n                            <span>likes</span>\n                            <span className=\"px-2\">·</span>\n                            <span className=\"mr-1\">\n                                {videoInfo.statistics.dislikeCount}\n                            </span>\n                            <span>dislikes</span>\n                            <span className=\"px-2\">·</span>\n                            <span>\n                                {this.getUploadDate(\n                                    videoInfo.snippet.publishedAt,\n                                )}\n                            </span>\n                        </div>\n                        <div>\n                            <small>\n                                {videoInfo.snippet.description.slice(0, 250)}\n                                ....\n                            </small>\n                        </div>\n                        <div>\n                            {videoInfo.snippet.tags\n                                .slice(0, 15)\n                                .map((tag, index) => {\n                                    return (\n                                        <small\n                                            key={index}\n                                            className=\"py-0 px-2 m-1 bg-secondary text-white rounded font-weight-lighter\"\n                                        >\n                                            {tag}\n                                        </small>\n                                    );\n                                })}\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className=\"d-flex align-items-center\">\n                    <h5>\n                        Videos being downloaded and uploaded will be displayed\n                        here\n                    </h5>\n                </div>\n            )}\n        </React.Fragment>\n    );\n}\n\nexport default CurrentVideo;\n","import React, { Component } from \"react\";\nimport AllAccounts from \"./AllAccounts\";\nimport AccountInfo from \"./AccountInfo\";\nimport ConfirmDeleteAccount from \"./ConfirmDeleteAccount\";\nimport AddNewAccount from \"./AddNewAccount\";\nimport Loader from \"../loader.gif\";\nimport CurrentVideo from \"./CurrentVideo\";\nimport { YOUTUBE_KEY } from \"../config/keys\";\nimport \"../bootstrap.min.css\";\nconst Axios = require(\"axios\");\nconst moment = require(\"moment\");\n\nexport class DailyTube extends Component {\n    state = {\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        /* \n            flowing states\n        */\n        running: false,\n        searching: false,\n        downloading: false,\n        uploading: false,\n        publishing: false,\n        switchingAccounts: false,\n        deletingAccount: false,\n        creatingChannel: false,\n        /* \n            static states\n        */\n        accounts: [],\n        currentAccount: {},\n        newAccountObject: null,\n        videoInfo: false,\n        accountInfo: false,\n        accountId: null,\n        filePath: \"\",\n        publishUrl: \"\",\n    };\n\n    async componentDidMount() {\n        const accounts = await this.fetchAllAccounts();\n        console.log(\n            \"TCL: DailyTube -> componentDidMount -> accounts\",\n            accounts,\n        );\n\n        if (!accounts.length) {\n            this.setState({ accounts: null, currentAccount: null });\n        } else {\n            const currentAccount = accounts.filter(\n                account => account.current === true,\n            )[0];\n            this.setState({ accounts, currentAccount });\n        }\n    }\n\n    componentDidUpdate() {\n        const {\n            running,\n            searching,\n            downloading,\n            uploading,\n            publishing,\n            switchingAccounts,\n            accountInfo,\n            updateAccountId,\n            creatingChannel,\n        } = this.state;\n\n        if (accountInfo === \"loading\") this.fetchAccountInfo(updateAccountId);\n\n        if (creatingChannel) this.addingNewDailyMotionChannel();\n\n        if (running) {\n            if (switchingAccounts) this.switchAccounts();\n\n            if (searching) this.searchForVideos();\n\n            if (downloading) this.downloadVideo();\n\n            if (uploading) this.uploadVideo();\n\n            if (publishing) this.publishVideo();\n        }\n    }\n\n    handleDeleteAccount = () => {\n        const id = this.state.accountInfo.upload.id;\n        console.log(\"TCL: DailyTube -> handleDeleteAccount -> id\", id);\n        Axios.delete(`/api/delete_account?account_id=${id}`, {\n            headers: this.state.headers,\n        })\n            .then(response => {\n                console.log(\"TCL: YouTube -> response\", response);\n                const updatedAccounts = async () => {\n                    this.setState({\n                        accounts: await this.fetchAllAccounts(),\n                        accountInfo: false,\n                    });\n                };\n                if (response.data.success) {\n                    updatedAccounts();\n                }\n            })\n            .catch();\n    };\n\n    addingNewDailyMotionChannel = () => {\n        const { newAccountObject } = this.state;\n        const body = JSON.stringify(newAccountObject);\n        Axios.post(`/api/create_new_account`, body, {\n            headers: this.state.headers,\n        })\n            .then(response => {\n                if (response.data.success) {\n                    this.handleEditAccountInfo(response.data.accountId);\n                }\n            })\n            .catch();\n    };\n\n    handleAddNewDailyMotionChannel = newAccountObject => {\n        console.log(\"TCL: newAccountObject\", newAccountObject);\n        this.setState({ newAccountObject, creatingChannel: true });\n    };\n\n    render() {\n        const {\n            accounts,\n            accountInfo,\n            deletingAccount,\n            currentAccount,\n            searching,\n            downloading,\n            uploading,\n            switchingAccounts,\n            publishing,\n            videoInfo,\n            creatingChannel,\n        } = this.state;\n        return (\n            <div className=\"d-flex flex-column position-relative fullscreen\">\n                {deletingAccount ? (\n                    <ConfirmDeleteAccount\n                        account={accountInfo}\n                        onCancelRequestToDeleteAccount={\n                            this.handleCancelRequestToDeleteAccount\n                        }\n                        onDeleteAccount={this.handleDeleteAccount}\n                    />\n                ) : (\n                    \"\"\n                )}\n                <div className=\"row m-0\">\n                    <div className=\"col-sm-3\">\n                        <div className=\"d-flex\">\n                            <button\n                                className=\"btn btn-success py-0 px-4 m-2\"\n                                onClick={() =>\n                                    this.setState({\n                                        running: true,\n                                        switchingAccounts: true,\n                                    })\n                                }\n                            >\n                                Start\n                            </button>\n\n                            <button\n                                className=\"btn btn-warning py-0 px-4 m-2\"\n                                onClick={() =>\n                                    this.setState({\n                                        running: false,\n                                    })\n                                }\n                            >\n                                Stop\n                            </button>\n                        </div>\n                        <div className=\"d-flex flex-column\">\n                            {accounts !== null ? (\n                                <AllAccounts\n                                    accounts={accounts}\n                                    onEditAccountInfo={\n                                        this.handleEditAccountInfo\n                                    }\n                                />\n                            ) : (\n                                <div>\n                                    {accounts === null ? (\n                                        <span className=\"text-warning\">\n                                            No accounts have been added yet\n                                        </span>\n                                    ) : (\n                                        <div>\n                                            <span>Loading Accounts</span>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"col-sm-9 py-2\">\n                        {!!accountInfo ? (\n                            <AccountInfo\n                                account={accountInfo}\n                                onRequestToDeleteAccount={\n                                    this.handleRequestToDeleteAccount\n                                }\n                                onUpdateAccountSettings={\n                                    this.handleUpdateAccountSettings\n                                }\n                                onAddNewAccount={() =>\n                                    this.setState({ accountInfo: false })\n                                }\n                            />\n                        ) : (\n                            <div>\n                                {creatingChannel ? (\n                                    <div className=\"col-sm-9 d-flex h-100 w-100\">\n                                        <div className=\"mx-auto my-auto d-flex align-items-center\">\n                                            <h4 className=\"mr-3\">\n                                                Loading Account Details\n                                            </h4>\n                                            <img\n                                                height=\"50px\"\n                                                src={Loader}\n                                                alt=\"\"\n                                            />\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <AddNewAccount\n                                        handle\n                                        onAddNewDailyMotionChannel={\n                                            this.handleAddNewDailyMotionChannel\n                                        }\n                                    />\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"bg-light h-100\">\n                    <div className=\"d-flex\">\n                        {!!currentAccount ? (\n                            <React.Fragment>\n                                <div className=\"px-2 bg-info \">\n                                    {currentAccount.user_name}\n                                </div>\n                                <div\n                                    className={`px-2 ${\n                                        searching ? \"bg-success\" : \"bg-white\"\n                                    }`}\n                                >\n                                    <span>searching</span>\n                                </div>\n                                <div\n                                    className={`px-2 ${\n                                        downloading ? \"bg-success\" : \"bg-white\"\n                                    }`}\n                                >\n                                    <span>downloading</span>\n                                </div>\n                                <div\n                                    className={`px-2 ${\n                                        uploading ? \"bg-success\" : \"bg-white\"\n                                    }`}\n                                >\n                                    <span>uploading</span>\n                                </div>\n                                <div\n                                    className={`px-2 ${\n                                        publishing ? \"bg-success\" : \"bg-white\"\n                                    }`}\n                                >\n                                    <span>publishing</span>\n                                </div>\n                                <div\n                                    className={`px-2 ${\n                                        switchingAccounts\n                                            ? \"bg-success\"\n                                            : \"bg-white\"\n                                    }`}\n                                >\n                                    <span>switchingAccounts</span>\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <span>waiting for current account</span>\n                        )}\n                    </div>\n                    <CurrentVideo videoInfo={videoInfo} />\n                </div>\n            </div>\n        );\n    }\n\n    getUploadDate = iso => {\n        return moment(iso, \"YYYYMMDD\").fromNow();\n    };\n\n    handleEditAccountInfo = async updateAccountId => {\n        const accounts = await this.fetchAllAccounts();\n        this.setState({\n            accountInfo: \"loading\",\n            updateAccountId,\n            accounts,\n            creatingChannel: false,\n        });\n    };\n\n    handleRequestToDeleteAccount = () => {\n        this.setState({ deletingAccount: true });\n    };\n\n    handleCancelRequestToDeleteAccount = () => {\n        this.setState({ deletingAccount: false });\n    };\n\n    handleUpdateAccountSettings = async newAccountSettings => {\n        const body = JSON.stringify(newAccountSettings);\n        const id = newAccountSettings.accountId;\n        Axios.put(`/api/update_account?account_id=${id}`, body, {\n            headers: this.state.headers,\n        })\n            .then(response => {\n                const updatedAccounts = async () => {\n                    this.setState({\n                        accounts: await this.fetchAllAccounts(),\n                    });\n                };\n                if (response.data.success) {\n                    updatedAccounts();\n                }\n            })\n            .catch(error => console.error(error));\n    };\n\n    fetchAccountInfo = accountId => {\n        Axios.get(`/api/get_account_info?account_id=${accountId}`)\n            .then(response => {\n                console.log(\"TCL: YouTube -> response\", response.data);\n                this.setState({ accountInfo: response.data });\n            })\n            .catch(error => {\n                this.setState({ accountInfo: false });\n            });\n    };\n\n    fetchAllAccounts = async () => {\n        let accounts;\n        await Axios.get(`/api/gets_all_accounts`)\n            .then(response => {\n                console.log(\"TCL: fetchAllAccounts -> response\", response);\n                accounts = response.data.sort((a, b) => b.current - a.current);\n            })\n            .catch();\n        return accounts;\n    };\n\n    fetchVideoInfo = async url => {\n        let videoInfo;\n        await Axios.get(url)\n            .then(response => {\n                videoInfo = response.data.items[0];\n            })\n            .catch();\n        return videoInfo;\n    };\n\n    fetchAllVideos = async () => {\n        let videos;\n        await Axios.get(`/api/get_all_video_ids`)\n            .then(response => {\n                videos = response.data;\n            })\n            .catch();\n        return videos;\n    };\n\n    fetchUnUploadedAccountVideos = async accountId => {\n        let videos;\n        await Axios.get(\n            `/api/get_un_uploaded_account_videos?account_id=${accountId}`,\n        )\n            .then(response => {\n                videos = response.data;\n            })\n            .catch();\n        return videos;\n    };\n\n    switchAccounts = () => {\n        let nextAccountId, currentAccountIndex;\n        /* \n            filter out accounts with no search terms or not in queue\n        */\n        const accounts = this.state.accounts\n            .filter(account => !!account.search_terms === account.queue_status)\n            .sort((a, b) => a.id - b.id);\n\n        const currentAccount = accounts.filter(\n            account => account.current === true,\n        );\n        if (currentAccount.length > 0) {\n            currentAccountIndex = accounts.indexOf(currentAccount[0]);\n            if (currentAccountIndex !== accounts.length - 1) {\n                nextAccountId = accounts[currentAccountIndex + 1].id;\n            } else {\n                nextAccountId = accounts[0].id;\n            }\n        } else {\n            // nextAccountId = accounts[0].id;\n        }\n\n        const body = JSON.stringify({\n            isCurrent: true,\n        });\n\n        Axios.put(`/api/update_account?account_id=${nextAccountId}`, body, {\n            headers: this.state.headers,\n        })\n            .then(async response => {\n                if (response.data.success) {\n                    const updatedAccounts = await this.fetchAllAccounts();\n                    const newCurrentAccount = updatedAccounts.filter(\n                        account => account.current === true,\n                    )[0];\n                    console.log(\n                        \"TCL: DailyTube -> newCurrentAccount\",\n                        newCurrentAccount,\n                    );\n                    this.setState({\n                        switchingAccounts: false,\n                        accounts: updatedAccounts,\n                        searching: true,\n                        currentAccount: newCurrentAccount,\n                        videoInfo: false,\n                    });\n                }\n            })\n            .catch();\n    };\n\n    getSearchResults = async (terms, order) => {\n        const allVideos = await this.fetchAllVideos();\n        const allVideoIds = allVideos.map(video => video.video_id);\n        const date = new Date(\n            new Date().setDate(new Date().getDate() - 7),\n        ).toISOString();\n        const promises = terms.map(term => {\n            const url = `https://www.googleapis.com/youtube/v3/search?q=${term}&maxResults=50&type=video&videoLicense=youtube&order=${order}&publishedAfter=${date}&part=snippet&key=${YOUTUBE_KEY}`;\n\n            return Axios.get(url).then(response => {\n                const infoPromises = response.data.items.map(async video => {\n                    const videoId = video.id.videoId;\n\n                    if (!allVideoIds.includes(videoId)) {\n                        const infoUrl = `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${YOUTUBE_KEY}&part=contentDetails,statistics`;\n\n                        return Axios.get(infoUrl).then(response => {\n                            const videoInfo = response.data.items[0];\n                            try {\n                                if (\n                                    !!videoInfo &&\n                                    !videoInfo.contentDetails.licensedContent\n                                ) {\n                                    return videoInfo;\n                                } else {\n                                    return null;\n                                }\n                            } catch (error) {\n                                return null;\n                            }\n                        });\n                    } else {\n                        console.log(\"Duplicate\");\n                    }\n                });\n                return Promise.all(infoPromises);\n            });\n        });\n\n        const searchResults = await Promise.all(promises);\n\n        let cleanedResults = [];\n\n        for (let results of searchResults) {\n            for (let result of results) {\n                if (!!result) cleanedResults = [...cleanedResults, result];\n            }\n        }\n\n        return cleanedResults.sort(\n            (a, b) => b.statistics.viewCount - a.statistics.viewCount,\n        );\n    };\n\n    searchForVideos = async () => {\n        const { search_terms, search_order, id } = this.state.currentAccount;\n\n        const accountVideos = await this.fetchUnUploadedAccountVideos(id);\n\n        /* \n            If account has un uploaded videos skip the search\n        */\n        if (!!accountVideos.length)\n            return this.setState({ searching: false, downloading: true });\n\n        const terms = search_terms.split(\",\");\n        const order = search_order;\n\n        const searchResults = await this.getSearchResults(terms, order);\n\n        /* \n            If no search results switch accounts\n        */\n        if (!searchResults.length)\n            return this.setState({ searching: false, switchingAccounts: true });\n\n        // remove duplicates in search results\n        let searchIds = searchResults.map(result => result.id);\n        searchIds = [...new Set(searchIds)].splice(0, 10);\n        console.log(\"TCL: searchForVideos -> searchIds\", searchIds);\n        const body = JSON.stringify({\n            searchIds,\n        });\n\n        Axios.put(`/api/update_account?account_id=${id}`, body, {\n            headers: this.state.headers,\n        })\n            .then(async response => {\n                if (response.data.success) {\n                    this.setState({ searching: false, downloading: true });\n                }\n            })\n            .catch(error => {\n                this.setState({ searching: false, switchingAccounts: true });\n            });\n    };\n\n    downloadVideo = async () => {\n        const { videoInfo, filePath } = this.state;\n\n        if (!videoInfo) {\n            const { id } = this.state.currentAccount;\n            const accountVideos = await this.fetchUnUploadedAccountVideos(id);\n            const currentVideoId = accountVideos[0].video_id;\n\n            const url = `https://www.googleapis.com/youtube/v3/videos?id=${currentVideoId}&key=${YOUTUBE_KEY}&part=snippet,statistics`;\n\n            const videoInfo = await this.fetchVideoInfo(url);\n            console.log(\"TCL: downloadVideo -> videoInfo\", videoInfo);\n            return this.setState({ videoInfo });\n        }\n\n        const body = JSON.stringify({\n            videoId: videoInfo.id,\n            title: videoInfo.snippet.title,\n            filePath,\n        });\n\n        Axios.post(`/api/download_video`, body, {\n            headers: this.state.headers,\n        })\n            .then(async response => {\n                console.log(\n                    \"TCL: downloadVideo -> response\",\n                    response.data.message,\n                );\n\n                if (response.data.success) {\n                    this.setState({\n                        downloading: false,\n                        uploading: true,\n                        filePath: response.data.file_path,\n                    });\n                } else {\n                    this.setState({\n                        downloading: false,\n                        switchingAccounts: true,\n                    });\n                }\n            })\n            .catch(error => {\n                this.setState({ downloading: false, switchingAccounts: true });\n            });\n    };\n\n    uploadVideo = async () => {\n        const { filePath } = this.state;\n        const { id } = this.state.currentAccount;\n        const accountVideos = await this.fetchUnUploadedAccountVideos(id);\n        const currentVideoId = accountVideos[0].video_id;\n        console.log(\"TCL: uploadVideo -> filePath\", filePath);\n\n        const body = JSON.stringify({\n            filePath,\n            videoId: currentVideoId,\n        });\n\n        Axios.post(`/api/upload_video?account_id=${id}`, body, {\n            headers: this.state.headers,\n        })\n            .then(async response => {\n                console.log(\n                    \"TCL: uploadVideo -> response\",\n                    response.data.message,\n                );\n                if (response.data.success) {\n                    this.setState({\n                        uploading: false,\n                        publishing: true,\n                        publishUrl: response.data.publish_url,\n                    });\n                } else {\n                    this.setState({\n                        uploading: false,\n                        switchingAccounts: true,\n                    });\n                }\n            })\n            .catch(error => {\n                this.setState({ uploading: false, switchingAccounts: true });\n            });\n    };\n\n    publishVideo = async () => {\n        const { publishUrl } = this.state;\n        console.log(\"TCL: publishVideo -> publishUrl\", publishUrl);\n        const { id } = this.state.currentAccount;\n\n        const accountVideos = await this.fetchUnUploadedAccountVideos(id);\n        const currentVideoId = accountVideos[0].video_id;\n        const url = `https://www.googleapis.com/youtube/v3/videos?id=${currentVideoId}&key=${YOUTUBE_KEY}&part=snippet`;\n\n        const videoInfo = await this.fetchVideoInfo(url);\n        const thumbnails = Object.values(videoInfo.snippet.thumbnails);\n        thumbnails.sort((a, b) => b.width - a.width);\n\n        const body = JSON.stringify({\n            videoId: videoInfo.id,\n            publishUrl: publishUrl,\n            title: videoInfo.snippet.title,\n            tags: videoInfo.snippet.tags || [],\n            description: videoInfo.snippet.description,\n            thumbnailUrl: thumbnails[0].url,\n        });\n\n        Axios.post(`/api/publish_video?account_id=${id}`, body, {\n            headers: this.state.headers,\n        })\n            .then(async response => {\n                console.log(\n                    \"TCL: publishVideo -> response\",\n                    response.data.message,\n                );\n                if (response.data.success) {\n                    this.setState({\n                        switchingAccounts: true,\n                        publishing: false,\n                        publishUrl: \"\",\n                    });\n                } else {\n                    this.setState({\n                        publishing: false,\n                        switchingAccounts: true,\n                    });\n                }\n            })\n            .catch(error => {\n                this.setState({ publishing: false, switchingAccounts: true });\n            });\n    };\n}\n\nexport default DailyTube;\n","import React, { Component } from \"react\";\n// import YouTube from \"./YouTube\";\nimport \"./App.css\";\n\nimport DailyTube from \"./components/DailyTube\";\n\nclass App extends Component {\n    render() {\n        return <DailyTube />;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}